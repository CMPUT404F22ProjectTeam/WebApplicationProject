{"ast":null,"code":"const REGEX_IS_INSTALLATION_LEGACY = /^v1\\./;\nconst REGEX_IS_INSTALLATION = /^ghs_/;\nconst REGEX_IS_USER_TO_SERVER = /^ghu_/;\nasync function auth(token) {\n  const isApp = token.split(/\\./).length === 3;\n  const isInstallation = REGEX_IS_INSTALLATION_LEGACY.test(token) || REGEX_IS_INSTALLATION.test(token);\n  const isUserToServer = REGEX_IS_USER_TO_SERVER.test(token);\n  const tokenType = isApp ? \"app\" : isInstallation ? \"installation\" : isUserToServer ? \"user-to-server\" : \"oauth\";\n  return {\n    type: \"token\",\n    token: token,\n    tokenType\n  };\n}\n\n/**\n * Prefix token for usage in the Authorization header\n *\n * @param token OAuth token or JSON Web Token\n */\nfunction withAuthorizationPrefix(token) {\n  if (token.split(/\\./).length === 3) {\n    return `bearer ${token}`;\n  }\n  return `token ${token}`;\n}\nasync function hook(token, request, route, parameters) {\n  const endpoint = request.endpoint.merge(route, parameters);\n  endpoint.headers.authorization = withAuthorizationPrefix(token);\n  return request(endpoint);\n}\nconst createTokenAuth = function createTokenAuth(token) {\n  if (!token) {\n    throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n  }\n  if (typeof token !== \"string\") {\n    throw new Error(\"[@octokit/auth-token] Token passed to createTokenAuth is not a string\");\n  }\n  token = token.replace(/^(token|bearer) +/i, \"\");\n  return Object.assign(auth.bind(null, token), {\n    hook: hook.bind(null, token)\n  });\n};\nexport { createTokenAuth };","map":{"version":3,"mappings":"AAAA,MAAMA,4BAA4B,GAAG,OAAO;AAC5C,MAAMC,qBAAqB,GAAG,OAAO;AACrC,MAAMC,uBAAuB,GAAG,OAAO;AAChC,eAAeC,IAAI,CAACC,KAAK,EAAE;EAC9B,MAAMC,KAAK,GAAGD,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,KAAK,CAAC;EAC5C,MAAMC,cAAc,GAAGR,4BAA4B,CAACS,IAAI,CAACL,KAAK,CAAC,IAC3DH,qBAAqB,CAACQ,IAAI,CAACL,KAAK,CAAC;EACrC,MAAMM,cAAc,GAAGR,uBAAuB,CAACO,IAAI,CAACL,KAAK,CAAC;EAC1D,MAAMO,SAAS,GAAGN,KAAK,GACjB,KAAK,GACLG,cAAc,GACV,cAAc,GACdE,cAAc,GACV,gBAAgB,GAChB,OAAO;EACrB,OAAO;IACHE,IAAI,EAAE,OAAO;IACbR,KAAK,EAAEA,KAAK;IACZO;EACR,CAAK;AACL;;ACpBA;AACA;AACA;AACA;AACA;AACA,SAAgBE,uBAAuB,CAACT,KAAK,EAAE;EAC3C,IAAIA,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAChC,OAAQ,UAASH,KAAM,EAAC;EAChC;EACI,OAAQ,SAAQA,KAAM,EAAC;AAC3B;ACTO,eAAeU,IAAI,CAACV,KAAK,EAAEW,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAE;EAC1D,MAAMC,QAAQ,GAAGH,OAAO,CAACG,QAAQ,CAACC,KAAK,CAACH,KAAK,EAAEC,UAAU,CAAC;EAC1DC,QAAQ,CAACE,OAAO,CAACC,aAAa,GAAGR,uBAAuB,CAACT,KAAK,CAAC;EAC/D,OAAOW,OAAO,CAACG,QAAQ,CAAC;AAC5B;ACHY,MAACI,eAAe,GAAG,SAASA,eAAe,CAAClB,KAAK,EAAE;EAC3D,IAAI,CAACA,KAAK,EAAE;IACR,MAAM,IAAImB,KAAK,CAAC,0DAA0D,CAAC;EACnF;EACI,IAAI,OAAOnB,KAAK,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAImB,KAAK,CAAC,uEAAuE,CAAC;EAChG;EACInB,KAAK,GAAGA,KAAK,CAACoB,OAAO,CAAC,oBAAoB,EAAE,EAAE,CAAC;EAC/C,OAAOC,MAAM,CAACC,MAAM,CAACvB,IAAI,CAACwB,IAAI,CAAC,IAAI,EAAEvB,KAAK,CAAC,EAAE;IACzCU,IAAI,EAAEA,IAAI,CAACa,IAAI,CAAC,IAAI,EAAEvB,KAAK;EACnC,CAAK,CAAC;AACN,CAAC","names":["REGEX_IS_INSTALLATION_LEGACY","REGEX_IS_INSTALLATION","REGEX_IS_USER_TO_SERVER","auth","token","isApp","split","length","isInstallation","test","isUserToServer","tokenType","type","withAuthorizationPrefix","hook","request","route","parameters","endpoint","merge","headers","authorization","createTokenAuth","Error","replace","Object","assign","bind"],"sources":["/Users/heyuting/404lab/404_project/WebApplicationProject/node_modules/@octokit/auth-token/dist-src/auth.js","/Users/heyuting/404lab/404_project/WebApplicationProject/node_modules/@octokit/auth-token/dist-src/with-authorization-prefix.js","/Users/heyuting/404lab/404_project/WebApplicationProject/node_modules/@octokit/auth-token/dist-src/hook.js","/Users/heyuting/404lab/404_project/WebApplicationProject/node_modules/@octokit/auth-token/dist-src/index.js"],"sourcesContent":["const REGEX_IS_INSTALLATION_LEGACY = /^v1\\./;\nconst REGEX_IS_INSTALLATION = /^ghs_/;\nconst REGEX_IS_USER_TO_SERVER = /^ghu_/;\nexport async function auth(token) {\n    const isApp = token.split(/\\./).length === 3;\n    const isInstallation = REGEX_IS_INSTALLATION_LEGACY.test(token) ||\n        REGEX_IS_INSTALLATION.test(token);\n    const isUserToServer = REGEX_IS_USER_TO_SERVER.test(token);\n    const tokenType = isApp\n        ? \"app\"\n        : isInstallation\n            ? \"installation\"\n            : isUserToServer\n                ? \"user-to-server\"\n                : \"oauth\";\n    return {\n        type: \"token\",\n        token: token,\n        tokenType,\n    };\n}\n","/**\n * Prefix token for usage in the Authorization header\n *\n * @param token OAuth token or JSON Web Token\n */\nexport function withAuthorizationPrefix(token) {\n    if (token.split(/\\./).length === 3) {\n        return `bearer ${token}`;\n    }\n    return `token ${token}`;\n}\n","import { withAuthorizationPrefix } from \"./with-authorization-prefix\";\nexport async function hook(token, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    endpoint.headers.authorization = withAuthorizationPrefix(token);\n    return request(endpoint);\n}\n","import { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nexport const createTokenAuth = function createTokenAuth(token) {\n    if (!token) {\n        throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n    }\n    if (typeof token !== \"string\") {\n        throw new Error(\"[@octokit/auth-token] Token passed to createTokenAuth is not a string\");\n    }\n    token = token.replace(/^(token|bearer) +/i, \"\");\n    return Object.assign(auth.bind(null, token), {\n        hook: hook.bind(null, token),\n    });\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}