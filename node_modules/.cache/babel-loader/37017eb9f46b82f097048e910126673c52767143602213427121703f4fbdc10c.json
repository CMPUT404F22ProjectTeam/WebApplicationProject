{"ast":null,"code":"var _jsxFileName = \"/home/charlotte/WebApplicationProject/src/components/Post/PostList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport SinglePost from \"./SinglePost\";\nimport axios from \"axios\";\nimport FormData from 'form-data';\nimport CommentList from './../Comment/CommentList';\nimport './PostList.css';\nimport { get } from '../Api';\nimport { sizeHeight } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = process.env.REACT_APP_CURRENT_URL;\nconst t06_url = process.env.REACT_APP_API_URL;\nconst t07_url = process.env.REACT_APP_API2_URL;\nfunction PostList(_ref) {\n  _s();\n  let {\n    handleShare\n  } = _ref;\n  const AUTHOR_ID = \"1111111111\";\n  const [postData, setPostData] = useState([]);\n  const [authors, setAuthors] = useState([]);\n  const [authors6, setAuthors6] = useState([]);\n  const [authors7, setAuthors7] = useState([]);\n  let temp = [];\n  /*\n  useEffect(() => {\n      get(`${base_url}/authors/`)\n          .then((res) => {\n              setAuthors(res.items)\n              authors.forEach((author) => {\n                  get(`${author.id}/posts/`)\n                      .then((res) => {\n                          res.items.forEach((post) => {\n                              var index = JSON.stringify(postData).indexOf(JSON.stringify(post))\n                              console.log(index)\n                              if (post.visibility === \"PUBLIC\" && index === -1) {\n                                  setPostData(postData => [...postData, post])\n                              }\n                          })\n                      })\n                      .catch((e) => console.error(e.message));\n              })\n          })\n          .catch((e) => console.error(e.message));\n  }, [authors, postData])\n  */\n  useEffect(() => {\n    get(`${t06_url}/authors/`).then(res => {\n      setAuthors6(res.items);\n      authors6.forEach(author => {\n        get(`${author.id}/posts/`).then(res => {\n          res.items.forEach(post => {\n            var index = JSON.stringify(postData).indexOf(JSON.stringify(post));\n            //console.log(index)\n            if (post.visibility === \"PUBLIC\" && index === -1) {\n              setPostData(postData => [...postData, post]);\n            } else {\n              return;\n            }\n          });\n        }).catch(e => console.error(e.message));\n      });\n    }).catch(e => console.error(e.message));\n  }, [authors6, postData]);\n  /*\n  useEffect(() => {\n      get(`${t07_url}/authors/`)\n          .then((res) => {\n              setAuthors7(res.items)\n              authors7.forEach((author) => {\n                  get(`${author.id}/posts/`)\n                      .then((res) => {\n                          res.items.forEach((post) => {\n                              var index = JSON.stringify(postData).indexOf(JSON.stringify(post))\n                              console.log(index)\n                              if (post.visibility === \"PUBLIC\" && index === -1) {\n                                  setPostData(postData => [...postData, post])\n                              }\n                          })\n                      })\n                      .catch((e) => console.error(e.message));\n              })\n          })\n          .catch((e) => console.error(e.message));\n  }, [authors7, postData])\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"PostList\",\n      children: postData.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          id: \"onePost\",\n          children: /*#__PURE__*/_jsxDEV(SinglePost, {\n            author: val.author.id,\n            postId: val.id,\n            description: val.description,\n            comments: /*#__PURE__*/_jsxDEV(CommentList, {\n              postId: val.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 39\n            }, this),\n            handleShare: handleShare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 13\n  }, this);\n}\n_s(PostList, \"lIJhGKMLQNihpwWHFAlPnLbB98k=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","SinglePost","axios","FormData","CommentList","get","sizeHeight","base_url","process","env","REACT_APP_CURRENT_URL","t06_url","REACT_APP_API_URL","t07_url","REACT_APP_API2_URL","PostList","handleShare","AUTHOR_ID","postData","setPostData","authors","setAuthors","authors6","setAuthors6","authors7","setAuthors7","temp","then","res","items","forEach","author","id","post","index","JSON","stringify","indexOf","visibility","catch","e","console","error","message","map","val","key","description"],"sources":["/home/charlotte/WebApplicationProject/src/components/Post/PostList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SinglePost from \"./SinglePost\";\nimport axios from \"axios\";\nimport FormData from 'form-data'\nimport CommentList from './../Comment/CommentList'\nimport './PostList.css'\nimport { get } from '../Api'\nimport { sizeHeight } from \"@mui/system\";\n\n\nconst base_url = process.env.REACT_APP_CURRENT_URL;\nconst t06_url = process.env.REACT_APP_API_URL;\nconst t07_url = process.env.REACT_APP_API2_URL;\n\n\nfunction PostList({ handleShare }) {\n    const AUTHOR_ID = \"1111111111\";\n    const [postData, setPostData] = useState([]);\n    const [authors, setAuthors] = useState([]);\n    const [authors6, setAuthors6] = useState([]);\n    const [authors7, setAuthors7] = useState([]);\n    let temp = []\n    /*\n    useEffect(() => {\n        get(`${base_url}/authors/`)\n            .then((res) => {\n                setAuthors(res.items)\n                authors.forEach((author) => {\n                    get(`${author.id}/posts/`)\n                        .then((res) => {\n                            res.items.forEach((post) => {\n                                var index = JSON.stringify(postData).indexOf(JSON.stringify(post))\n                                console.log(index)\n                                if (post.visibility === \"PUBLIC\" && index === -1) {\n                                    setPostData(postData => [...postData, post])\n                                }\n                            })\n                        })\n                        .catch((e) => console.error(e.message));\n                })\n            })\n            .catch((e) => console.error(e.message));\n    }, [authors, postData])\n    */\n    useEffect(() => {\n        get(`${t06_url}/authors/`)\n            .then((res) => {\n                setAuthors6(res.items)\n                authors6.forEach((author) => {\n                    get(`${author.id}/posts/`)\n                        .then((res) => {\n                            res.items.forEach((post) => {\n                                var index = JSON.stringify(postData).indexOf(JSON.stringify(post))\n                                //console.log(index)\n                                if (post.visibility === \"PUBLIC\" && index === -1) {\n                                    setPostData(postData => [...postData, post])\n                                }\n                                else {\n                                    return\n                                }\n                            })\n                        })\n                        .catch((e) => console.error(e.message));\n                })\n            })\n            .catch((e) => console.error(e.message));\n    }, [authors6, postData])\n    /*\n    useEffect(() => {\n        get(`${t07_url}/authors/`)\n            .then((res) => {\n                setAuthors7(res.items)\n                authors7.forEach((author) => {\n                    get(`${author.id}/posts/`)\n                        .then((res) => {\n                            res.items.forEach((post) => {\n                                var index = JSON.stringify(postData).indexOf(JSON.stringify(post))\n                                console.log(index)\n                                if (post.visibility === \"PUBLIC\" && index === -1) {\n                                    setPostData(postData => [...postData, post])\n                                }\n                            })\n                        })\n                        .catch((e) => console.error(e.message));\n                })\n            })\n            .catch((e) => console.error(e.message));\n    }, [authors7, postData])\n    */\n    return (<div>\n        <ul className=\"PostList\">\n            {postData.map((val, key) => {\n                return (\n                    <li key={key} id=\"onePost\">\n                        <SinglePost\n                            author={val.author.id}\n                            postId={val.id}\n                            description={val.description}\n                            comments={<CommentList postId={val.id} />}\n                            handleShare={handleShare}\n                        />\n                    </li>\n                );\n            })}</ul>\n    </div>\n    )\n}\n\nexport default PostList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,gBAAgB;AACvB,SAASC,GAAG,QAAQ,QAAQ;AAC5B,SAASC,UAAU,QAAQ,aAAa;AAAC;AAGzC,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AAClD,MAAMC,OAAO,GAAGH,OAAO,CAACC,GAAG,CAACG,iBAAiB;AAC7C,MAAMC,OAAO,GAAGL,OAAO,CAACC,GAAG,CAACK,kBAAkB;AAG9C,SAASC,QAAQ,OAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAY,CAAC;EAC7B,MAAMC,SAAS,GAAG,YAAY;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAI2B,IAAI,GAAG,EAAE;EACb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI1B,SAAS,CAAC,MAAM;IACZK,GAAG,CAAE,GAAEM,OAAQ,WAAU,CAAC,CACrBgB,IAAI,CAAEC,GAAG,IAAK;MACXL,WAAW,CAACK,GAAG,CAACC,KAAK,CAAC;MACtBP,QAAQ,CAACQ,OAAO,CAAEC,MAAM,IAAK;QACzB1B,GAAG,CAAE,GAAE0B,MAAM,CAACC,EAAG,SAAQ,CAAC,CACrBL,IAAI,CAAEC,GAAG,IAAK;UACXA,GAAG,CAACC,KAAK,CAACC,OAAO,CAAEG,IAAI,IAAK;YACxB,IAAIC,KAAK,GAAGC,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAAC,CAACmB,OAAO,CAACF,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;YAClE;YACA,IAAIA,IAAI,CAACK,UAAU,KAAK,QAAQ,IAAIJ,KAAK,KAAK,CAAC,CAAC,EAAE;cAC9Cf,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEe,IAAI,CAAC,CAAC;YAChD,CAAC,MACI;cACD;YACJ;UACJ,CAAC,CAAC;QACN,CAAC,CAAC,CACDM,KAAK,CAAEC,CAAC,IAAKC,OAAO,CAACC,KAAK,CAACF,CAAC,CAACG,OAAO,CAAC,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC,CAAC,CACDJ,KAAK,CAAEC,CAAC,IAAKC,OAAO,CAACC,KAAK,CAACF,CAAC,CAACG,OAAO,CAAC,CAAC;EAC/C,CAAC,EAAE,CAACrB,QAAQ,EAAEJ,QAAQ,CAAC,CAAC;EACxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,oBAAQ;IAAA,uBACJ;MAAI,SAAS,EAAC,UAAU;MAAA,UACnBA,QAAQ,CAAC0B,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;QACxB,oBACI;UAAc,EAAE,EAAC,SAAS;UAAA,uBACtB,QAAC,UAAU;YACP,MAAM,EAAED,GAAG,CAACd,MAAM,CAACC,EAAG;YACtB,MAAM,EAAEa,GAAG,CAACb,EAAG;YACf,WAAW,EAAEa,GAAG,CAACE,WAAY;YAC7B,QAAQ,eAAE,QAAC,WAAW;cAAC,MAAM,EAAEF,GAAG,CAACb;YAAG;cAAA;cAAA;cAAA;YAAA,QAAI;YAC1C,WAAW,EAAEhB;UAAY;YAAA;YAAA;YAAA;UAAA;QAC3B,GAPG8B,GAAG;UAAA;UAAA;UAAA;QAAA,QAQP;MAEb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QACV;AAEV;AAAC,GA3FQ/B,QAAQ;AAAA,KAARA,QAAQ;AA6FjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}