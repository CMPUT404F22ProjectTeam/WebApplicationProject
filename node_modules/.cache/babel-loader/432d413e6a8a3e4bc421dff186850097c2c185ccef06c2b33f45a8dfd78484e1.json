{"ast":null,"code":"import { request } from '@octokit/request';\nimport { getUserAgent } from 'universal-user-agent';\nconst VERSION = \"5.0.4\";\nfunction _buildMessageForResponseErrors(data) {\n  return `Request failed due to following response errors:\\n` + data.errors.map(e => ` - ${e.message}`).join(\"\\n\");\n}\nclass GraphqlResponseError extends Error {\n  constructor(request, headers, response) {\n    super(_buildMessageForResponseErrors(response));\n    this.request = request;\n    this.headers = headers;\n    this.response = response;\n    this.name = \"GraphqlResponseError\";\n    // Expose the errors and response data in their shorthand properties.\n    this.errors = response.errors;\n    this.data = response.data;\n    // Maintains proper stack trace (only available on V8)\n    /* istanbul ignore next */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\nconst NON_VARIABLE_OPTIONS = [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"query\", \"mediaType\"];\nconst FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nconst GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request, query, options) {\n  if (options) {\n    if (typeof query === \"string\" && \"query\" in options) {\n      return Promise.reject(new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`));\n    }\n    for (const key in options) {\n      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;\n      return Promise.reject(new Error(`[@octokit/graphql] \"${key}\" cannot be used as variable name`));\n    }\n  }\n  const parsedOptions = typeof query === \"string\" ? Object.assign({\n    query\n  }, options) : query;\n  const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n    if (!result.variables) {\n      result.variables = {};\n    }\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {});\n  // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix\n  // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451\n  const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n  return request(requestOptions).then(response => {\n    if (response.data.errors) {\n      const headers = {};\n      for (const key of Object.keys(response.headers)) {\n        headers[key] = response.headers[key];\n      }\n      throw new GraphqlResponseError(requestOptions, headers, response.data);\n    }\n    return response.data.data;\n  });\n}\nfunction withDefaults(request, newDefaults) {\n  const newRequest = request.defaults(newDefaults);\n  const newApi = (query, options) => {\n    return graphql(newRequest, query, options);\n  };\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: newRequest.endpoint\n  });\n}\nconst graphql$1 = withDefaults(request, {\n  headers: {\n    \"user-agent\": `octokit-graphql.js/${VERSION} ${getUserAgent()}`\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\nexport { GraphqlResponseError, graphql$1 as graphql, withCustomRequest };","map":{"version":3,"mappings":"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","names":["VERSION","_buildMessageForResponseErrors","data","errors","map","e","message","join","GraphqlResponseError","Error","constructor","request","headers","response","name","captureStackTrace","NON_VARIABLE_OPTIONS","FORBIDDEN_VARIABLE_OPTIONS","GHES_V3_SUFFIX_REGEX","graphql","query","options","Promise","reject","key","includes","parsedOptions","Object","assign","requestOptions","keys","reduce","result","variables","baseUrl","endpoint","DEFAULTS","test","url","replace","then","withDefaults","newDefaults","newRequest","defaults","newApi","bind","getUserAgent","method","withCustomRequest","customRequest"],"sources":["/Users/heyuting/404lab/404_project/WebApplicationProject/node_modules/@octokit/graphql/dist-src/version.js","/Users/heyuting/404lab/404_project/WebApplicationProject/node_modules/@octokit/graphql/dist-src/error.js","/Users/heyuting/404lab/404_project/WebApplicationProject/node_modules/@octokit/graphql/dist-src/graphql.js","/Users/heyuting/404lab/404_project/WebApplicationProject/node_modules/@octokit/graphql/dist-src/with-defaults.js","/Users/heyuting/404lab/404_project/WebApplicationProject/node_modules/@octokit/graphql/dist-src/index.js"],"sourcesContent":["export const VERSION = \"5.0.4\";\n","function _buildMessageForResponseErrors(data) {\n    return (`Request failed due to following response errors:\\n` +\n        data.errors.map((e) => ` - ${e.message}`).join(\"\\n\"));\n}\nexport class GraphqlResponseError extends Error {\n    constructor(request, headers, response) {\n        super(_buildMessageForResponseErrors(response));\n        this.request = request;\n        this.headers = headers;\n        this.response = response;\n        this.name = \"GraphqlResponseError\";\n        // Expose the errors and response data in their shorthand properties.\n        this.errors = response.errors;\n        this.data = response.data;\n        // Maintains proper stack trace (only available on V8)\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\n","import { GraphqlResponseError } from \"./error\";\nconst NON_VARIABLE_OPTIONS = [\n    \"method\",\n    \"baseUrl\",\n    \"url\",\n    \"headers\",\n    \"request\",\n    \"query\",\n    \"mediaType\",\n];\nconst FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nconst GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nexport function graphql(request, query, options) {\n    if (options) {\n        if (typeof query === \"string\" && \"query\" in options) {\n            return Promise.reject(new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`));\n        }\n        for (const key in options) {\n            if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key))\n                continue;\n            return Promise.reject(new Error(`[@octokit/graphql] \"${key}\" cannot be used as variable name`));\n        }\n    }\n    const parsedOptions = typeof query === \"string\" ? Object.assign({ query }, options) : query;\n    const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {\n        if (NON_VARIABLE_OPTIONS.includes(key)) {\n            result[key] = parsedOptions[key];\n            return result;\n        }\n        if (!result.variables) {\n            result.variables = {};\n        }\n        result.variables[key] = parsedOptions[key];\n        return result;\n    }, {});\n    // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix\n    // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451\n    const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;\n    if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n        requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n    }\n    return request(requestOptions).then((response) => {\n        if (response.data.errors) {\n            const headers = {};\n            for (const key of Object.keys(response.headers)) {\n                headers[key] = response.headers[key];\n            }\n            throw new GraphqlResponseError(requestOptions, headers, response.data);\n        }\n        return response.data.data;\n    });\n}\n","import { graphql } from \"./graphql\";\nexport function withDefaults(request, newDefaults) {\n    const newRequest = request.defaults(newDefaults);\n    const newApi = (query, options) => {\n        return graphql(newRequest, query, options);\n    };\n    return Object.assign(newApi, {\n        defaults: withDefaults.bind(null, newRequest),\n        endpoint: newRequest.endpoint,\n    });\n}\n","import { request } from \"@octokit/request\";\nimport { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nimport { withDefaults } from \"./with-defaults\";\nexport const graphql = withDefaults(request, {\n    headers: {\n        \"user-agent\": `octokit-graphql.js/${VERSION} ${getUserAgent()}`,\n    },\n    method: \"POST\",\n    url: \"/graphql\",\n});\nexport { GraphqlResponseError } from \"./error\";\nexport function withCustomRequest(customRequest) {\n    return withDefaults(customRequest, {\n        method: \"POST\",\n        url: \"/graphql\",\n    });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}