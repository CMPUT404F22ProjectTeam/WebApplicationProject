{"ast":null,"code":"var _jsxFileName = \"/Users/heyuting/404lab/404_project/WebApplicationProject/src/components/Post/MyPostList.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport MySinglePost from \"./../Post/MySinglePost\";\nimport CommentList from './../Comment/CommentList';\nimport './PostList.css';\nimport { Cookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = process.env.REACT_APP_CURRENT_URL;\nfunction MyPostList() {\n  _s();\n  const cookies = new Cookies();\n  const AUTHOR_ID = cookies.get('id').split(\"/\").pop();\n  const [postData, setPostData] = useState([]);\n  useEffect(() => {\n    axios.get(`${base_url}/authors/${AUTHOR_ID}/posts`, {\n      auth: {\n        username: 'admin',\n        password: 'admin'\n      }\n    }).then(data => {\n      setPostData(data.data);\n    }).catch(e => console.log(e));\n  }, [postData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"PostList\",\n      children: postData.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          id: \"onePost\",\n          children: /*#__PURE__*/_jsxDEV(MySinglePost, {\n            title: val.title,\n            description: val.description,\n            content: val.content,\n            postId: val.id,\n            comments: /*#__PURE__*/_jsxDEV(CommentList, {\n              postId: val.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n}\n_s(MyPostList, \"EOiUIMgic3z/og+WuvqEOfbtKmk=\");\n_c = MyPostList;\nexport default MyPostList;\nvar _c;\n$RefreshReg$(_c, \"MyPostList\");","map":{"version":3,"names":["axios","React","useState","useEffect","MySinglePost","CommentList","Cookies","base_url","process","env","REACT_APP_CURRENT_URL","MyPostList","cookies","AUTHOR_ID","get","split","pop","postData","setPostData","auth","username","password","then","data","catch","e","console","log","map","val","key","title","description","content","id"],"sources":["/Users/heyuting/404lab/404_project/WebApplicationProject/src/components/Post/MyPostList.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport MySinglePost from \"./../Post/MySinglePost\";\nimport CommentList from './../Comment/CommentList'\nimport './PostList.css'\nimport { Cookies } from 'react-cookie';\n\n\nconst base_url = process.env.REACT_APP_CURRENT_URL;\n\nfunction MyPostList() {\n    const cookies = new Cookies();\n    const AUTHOR_ID = cookies.get('id').split(\"/\").pop();\n    const [postData, setPostData] = useState([]);\n\n    useEffect(() => {\n        axios\n            .get(`${base_url}/authors/${AUTHOR_ID}/posts`, { auth: { username: 'admin', password: 'admin' } })\n            .then((data) => {\n                setPostData(data.data)\n            })\n            .catch((e) => console.log(e));\n    }, [postData])\n\n    return (<div>\n        <ul className=\"PostList\">\n            {postData.map((val, key) => {\n                return (\n                    <li key={key} id=\"onePost\">\n                        <MySinglePost\n                            title = {val.title}\n                            description={val.description}\n                            content = {val.content}\n                            postId={val.id}\n                            comments={<CommentList postId={val.id} />}\n                        />\n                    </li>\n                );\n            })}</ul>\n    </div>\n    )\n}\n\nexport default MyPostList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,gBAAgB;AACvB,SAASC,OAAO,QAAQ,cAAc;AAAC;AAGvC,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AAElD,SAASC,UAAU,GAAG;EAAA;EAClB,MAAMC,OAAO,GAAG,IAAIN,OAAO,EAAE;EAC7B,MAAMO,SAAS,GAAGD,OAAO,CAACE,GAAG,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;EACpD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZH,KAAK,CACAc,GAAG,CAAE,GAAEP,QAAS,YAAWM,SAAU,QAAO,EAAE;MAAEM,IAAI,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAQ;IAAE,CAAC,CAAC,CACjGC,IAAI,CAAEC,IAAI,IAAK;MACZL,WAAW,CAACK,IAAI,CAACA,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAKC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,oBAAQ;IAAA,uBACJ;MAAI,SAAS,EAAC,UAAU;MAAA,UACnBA,QAAQ,CAACW,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;QACxB,oBACI;UAAc,EAAE,EAAC,SAAS;UAAA,uBACtB,QAAC,YAAY;YACT,KAAK,EAAID,GAAG,CAACE,KAAM;YACnB,WAAW,EAAEF,GAAG,CAACG,WAAY;YAC7B,OAAO,EAAIH,GAAG,CAACI,OAAQ;YACvB,MAAM,EAAEJ,GAAG,CAACK,EAAG;YACf,QAAQ,eAAE,QAAC,WAAW;cAAC,MAAM,EAAEL,GAAG,CAACK;YAAG;cAAA;cAAA;cAAA;YAAA;UAAI;YAAA;YAAA;YAAA;UAAA;QAC5C,GAPGJ,GAAG;UAAA;UAAA;UAAA;QAAA,QAQP;MAEb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QACV;AAEV;AAAC,GA/BQnB,UAAU;AAAA,KAAVA,UAAU;AAiCnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}