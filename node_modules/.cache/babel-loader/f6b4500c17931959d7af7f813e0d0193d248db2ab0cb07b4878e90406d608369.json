{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSpecifierDefault;\nvar _generated = require(\"./generated\");\nfunction isSpecifierDefault(specifier) {\n  return (0, _generated.isImportDefaultSpecifier)(specifier) || (0, _generated.isIdentifier)(specifier.imported || specifier.exported, {\n    name: \"default\"\n  });\n}","map":{"version":3,"mappings":";;;;;;AAAA;AAMe,SAASA,kBAAkB,CACxCC,SAA4B,EACnB;EACT,OACE,uCAAwB,EAACA,SAAS,CAAC,IAEnC,2BAAY,EAACA,SAAS,CAACC,QAAQ,IAAID,SAAS,CAACE,QAAQ,EAAE;IACrDC,IAAI,EAAE;EACR,CAAC,CAAC;AAEN","names":["isSpecifierDefault","specifier","imported","exported","name"],"sources":["/home/charlotte/WebApplicationProject/node_modules/@babel/types/src/validators/isSpecifierDefault.ts"],"sourcesContent":["import { isIdentifier, isImportDefaultSpecifier } from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `specifier` is a `default` import or export.\n */\nexport default function isSpecifierDefault(\n  specifier: t.ModuleSpecifier,\n): boolean {\n  return (\n    isImportDefaultSpecifier(specifier) ||\n    // @ts-expect-error todo(flow->ts): stricter type for specifier\n    isIdentifier(specifier.imported || specifier.exported, {\n      name: \"default\",\n    })\n  );\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}